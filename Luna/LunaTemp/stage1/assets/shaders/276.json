{"id":276,"assetBundleId":-2,"data":[[],"Mobile\/VertexLit",null,["FOG_EXP","FOG_EXP2","FOG_LINEAR","POINT","SPOT","SHADOWS_DEPTH","STEREO_CUBEMAP_RENDER_ON","STEREO_INSTANCING_ON","STEREO_MULTIVIEW_ON","UNITY_SINGLE_PASS_STEREO","_","__","INSTANCING_ON","SHADOWS_CUBE"],[[0,0,"",1,"",0,[4,null],[1,null],[2,null],[[1,null],[0,null],[0,null]],[[1,null],[0,null],[0,null]],[15,null],[0,null],[0,null],[0,null],[255,null],[255,null],[[0,null],[0,null],[0,null],[8,null]],[[0,null],[0,null],[0,null],[8,null]],[[0,null],[0,null],[0,null],[8,null]],[["LIGHTMODE","Vertex"],["RenderType","Opaque"]],["FOG_EXP","FOG_EXP2","FOG_LINEAR","POINT","SPOT","STEREO_CUBEMAP_RENDER_ON","STEREO_INSTANCING_ON","STEREO_MULTIVIEW_ON","UNITY_SINGLE_PASS_STEREO","_"],[],[],[],0],[1,0,"",2,"",0,[4,null],[1,null],[2,null],[[1,null],[0,null],[0,null]],[[1,null],[0,null],[0,null]],[15,null],[0,null],[0,null],[0,null],[255,null],[255,null],[[0,null],[0,null],[0,null],[8,null]],[[0,null],[0,null],[0,null],[8,null]],[[0,null],[0,null],[0,null],[8,null]],[["LIGHTMODE","VertexLM"],["RenderType","Opaque"]],["FOG_EXP","FOG_EXP2","FOG_LINEAR","STEREO_CUBEMAP_RENDER_ON","STEREO_INSTANCING_ON","STEREO_MULTIVIEW_ON","UNITY_SINGLE_PASS_STEREO","__"],[],[],[],0],[2,0,"ShadowCaster",8,"",0,[4,null],[1,null],[0,null],[[1,null],[0,null],[0,null]],[[1,null],[0,null],[0,null]],[15,null],[0,null],[0,null],[0,null],[255,null],[255,null],[[0,null],[0,null],[0,null],[8,null]],[[0,null],[0,null],[0,null],[8,null]],[[0,null],[0,null],[0,null],[8,null]],[["LIGHTMODE","SHADOWCASTER"],["RenderType","Opaque"],["SHADOWSUPPORT","true"]],["INSTANCING_ON","SHADOWS_CUBE","SHADOWS_DEPTH","STEREO_CUBEMAP_RENDER_ON","STEREO_INSTANCING_ON","STEREO_MULTIVIEW_ON","UNITY_SINGLE_PASS_STEREO","__"],[],[[2,0,["SHADOWS_DEPTH"],"\n#version 100\n\nuniform \tvec4 _WorldSpaceLightPos0;\nuniform \tvec4 unity_LightShadowBias;\nuniform \tvec4 hlslcc_mtx4x4unity_ObjectToWorld[4];\nuniform \tvec4 hlslcc_mtx4x4unity_WorldToObject[4];\nuniform \tvec4 hlslcc_mtx4x4unity_MatrixVP[4];\nattribute highp vec4 in_POSITION0;\nattribute highp vec3 in_NORMAL0;\nvec4 u_xlat0;\nvec4 u_xlat1;\nvec4 u_xlat2;\nfloat u_xlat6;\nfloat u_xlat9;\nbool u_xlatb9;\nvoid main()\n{\n    u_xlat0.x = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);\n    u_xlat0.y = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);\n    u_xlat0.z = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);\n    u_xlat9 = dot(u_xlat0.xyz, u_xlat0.xyz);\n    u_xlat9 = inversesqrt(u_xlat9);\n    u_xlat0.xyz = vec3(u_xlat9) * u_xlat0.xyz;\n    u_xlat1 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];\n    u_xlat1 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat1;\n    u_xlat1 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat1;\n    u_xlat1 = hlslcc_mtx4x4unity_ObjectToWorld[3] * in_POSITION0.wwww + u_xlat1;\n    u_xlat2.xyz = (-u_xlat1.xyz) * _WorldSpaceLightPos0.www + _WorldSpaceLightPos0.xyz;\n    u_xlat9 = dot(u_xlat2.xyz, u_xlat2.xyz);\n    u_xlat9 = inversesqrt(u_xlat9);\n    u_xlat2.xyz = vec3(u_xlat9) * u_xlat2.xyz;\n    u_xlat9 = dot(u_xlat0.xyz, u_xlat2.xyz);\n    u_xlat9 = (-u_xlat9) * u_xlat9 + 1.0;\n    u_xlat9 = sqrt(u_xlat9);\n    u_xlat9 = u_xlat9 * unity_LightShadowBias.z;\n    u_xlat0.xyz = (-u_xlat0.xyz) * vec3(u_xlat9) + u_xlat1.xyz;\n    u_xlatb9 = unity_LightShadowBias.z!=0.0;\n    u_xlat0.xyz = (bool(u_xlatb9)) ? u_xlat0.xyz : u_xlat1.xyz;\n    u_xlat2 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];\n    u_xlat2 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat2;\n    u_xlat0 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat2;\n    u_xlat0 = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat1.wwww + u_xlat0;\n    u_xlat1.x = unity_LightShadowBias.x \/ u_xlat0.w;\n    u_xlat1.x = clamp(u_xlat1.x, 0.0, 1.0);\n    u_xlat6 = u_xlat0.z + u_xlat1.x;\n    u_xlat1.x = max((-u_xlat0.w), u_xlat6);\n    gl_Position.xyw = u_xlat0.xyw;\n    u_xlat0.x = (-u_xlat6) + u_xlat1.x;\n    gl_Position.z = unity_LightShadowBias.y * u_xlat0.x + u_xlat6;\n    return;\n}\n\n","\n#version 100\n\n#ifdef GL_FRAGMENT_PRECISION_HIGH\n    precision highp float;\n#else\n    precision mediump float;\n#endif\nprecision highp int;\n#define SV_Target0 gl_FragData[0]\nvoid main()\n{\n    SV_Target0 = vec4(0.0, 0.0, 0.0, 0.0);\n    return;\n}\n\n",0]],[],0]],[],[["_MainTex",4,0,0,0,0,"white"]],null,null,0,0,0]}